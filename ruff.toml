src = ["src"]

lint.ignore = [
    "RET505", # unnecesary else
    "COM812", "ISC001", # automatically handled by auto-formatter
    "TRY003", "EM101", # in Django we still want to do it
]

lint.select = [
    "F",     # pyflakes
    "E",     # pycodestyle
    "W",     # pycodestyle
    "I",     # imports
    "N",     # pep8-naming
    "UP",    # pyupgrade
    "ASYNC", # flake8-async
    "S",     # flake8-bandit
    "BLE",   # flake8-blind-except
    "FBT",   # flake8-boolean-trap
    "B",     # flake8-bugbear
    "A",     # flake8-builtins
    "COM",   # flake8-commas
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "DJ",    # flake8-django
    "EM",    # flake8-errmsg
    "EXE",   # flake8-executable
    "FA",    # flake8-future-annotations
    "ISC",   #  flake8-implicit-str-concat
    "ICN",   # flake8-import-conventions
    "G",     # flake8-logging-format
    "INP",   # flake8-no-pep420
    "PIE",   # flake8-pie
    "T20",   # flake8-print
    "Q",     # flake8-quotes
    "RSE",   # flake8-raise
    "RET",   # flake8-return
    "SLF",   # flake8-self
    "SLOT",  # flake8-slots
    "SIM",   # flake8-simplify
    "TID",   # flake8-tidy-imports
    "TCH",   # flake8-type-checking
    "INT",   # flake8-gettext
    "ARG",   # flake8-unused-arguments
    "PTH",   # flake8-use-pathlib
    "TD",    # flake8-todos
    "FIX",   # flake8-fixmee
    "ERA",   # eradicate
    "PL",    # Pylint
    "TRY",   # tryceratops
    "FLY",   # flynt
    "AIR",   # Airflow
    "PERF",  # Perflint
    # "FURB",  # refurb (in preview)
    # "LOG",   # flake8-logging (in preview)
    "RUF",   # Ruff-specific rules
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["ALL"]
lint.unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "**/migrations/**",
]

line-length = 120

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10
target-version = "py310"

[lint.flake8-self]
extend-ignore-names = ["_base_manager", "_default_manager",  "_meta"]  # okay django things to use

[lint.per-file-ignores]
"setup.py" = ["INP001"]
"*/settings/*.py" = ["T201"]  # print in django settings is ok

[lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[lint.pylint]
max-args = 8

